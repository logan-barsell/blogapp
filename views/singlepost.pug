doctype html
html
	head
		title #{message.title}
		link(type="text/css" rel="stylesheet" href="/static/css/materialize.min.css"  media="screen,projection")
		link(type="text/css" rel="stylesheet" href="/static/css/home.css")
		link(href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet")
	body(style="background-image: url('/static/css/images/ocean.jpg')")
		nav.wood.z-depth-4
			h2.brand-logo Message in a Bottle
			ul.nav-mobile.left
					li
						.shell
							a(href="/home") Home
					li
						.shell
							a(href="/profile") Profile
			ul.nav-mobile.right
					li
						.shell
							if user
								a(href="/?sessionend=true") Log Out
							else
								a(href="/?sessionend=true") Log In
		.bottle
		.col
			.row
				.col.s12.m8.offset-m2
					.likes.center
						a(href="#")
							i.material-icons.heart(id=message.id) favorite
						span.totallikes #{totallikes}

					if message.user && user
						if message.user.id == user.id
							.options
								.row
									.col.s6
										a.btn.blue(href='#edit') Edit	
										#edit.modal
													.modal-content
														form.post.card.z-depth-4(action="/home" method="POST")
															.card-image
																img(src="static/css/images/msgheader.jpg" alt="ocean")
																span.card-title.card-flex
																	.input-field.title
																		label(for="title") Title
																		input.input-flex(name="title" id="newtitle" type="text" class="validate" required="" autocomplete="off" value=message.title)
															.card-content
																label(for="body") Body
																	.input-field.body
																		input(name="body" id="newbody" type="text" class="validate" required="" autocomplete="off" value=message.body)
															.card-action.center
																button.waves-effect.waves-light.btn-large(type="submit") Update Message
									.col.s6
										form(action="/delete/"+message.id method="POST")
											button.btn.red.right(type="submit") Delete
						else
							.options
					.card.msg.z-depth-4
						.card-image
							img(src="/static/css/images/msgheader.jpg" alt="ocean")
							a.card-title(href="/singlepost/"+message.title) #{message.title}
						.card-content
							p #{message.body}
							if message.user
								span.right -#{message.user.username}
							else
								span.right -Anonymous
						ul.collapsible(data-collapsible="accordion")
							li
								.collapsible-header.center
									span.close Show Comments (#{message.comments.length})
									span.open Hide Comments (#{message.comments.length})
								.collapsible-body
									each comment in message.comments
										if comment.user
											p.commenter #{comment.user.username}: 
												span #{comment.comment}
											.divider
										else
											p.commenter Anonymous: 
												span #{comment.comment}
											.divider
									form(action="/new-comment" method="POST")
										.input-field.comment
											input(name="messageId" value=message.id hidden)
											input(name="comment" id="newcomment" type="text" class="validate" required="" autocomplete="off")
											button.waves-effect.waves-light.btn(type="submit") Comment
					.center.time(id=message.id) time



		script(type="text/javascript" src="/static/js/jquery.min.js")
		script(type="text/javascript" src="/static/js/materialize.min.js")
		script(type="text/javascript" src="/static/js/custom.js")